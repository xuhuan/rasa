name: CI Github Actions

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

env:
  DEFAULT_PYTHON_VERSION: '3.9'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout git repository üïù
      uses: actions/checkout@v3

    - name: Download gomplate
      run: |-
        sudo curl -o /usr/local/bin/gomplate -sSL https://github.com/hairyhenderson/gomplate/releases/download/v3.9.0/gomplate_linux-amd64
        sudo chmod +x /usr/local/bin/gomplate

    - name: Set up Python ${{ env.DEFAULT_PYTHON_VERSION }} üêç
      uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435  # v3.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Read Poetry Version üî¢
      run: |
        echo "POETRY_VERSION=$(scripts/poetry-version.sh)" >> $GITHUB_ENV
      shell: bash

    - name: Install poetry ü¶Ñ
      uses: Gr1N/setup-poetry@v7
      with:
        poetry-version: ${{ env.POETRY_VERSION }}

    - name: Load Poetry Cached Libraries ‚¨á
      id: cache-poetry
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-${{ env.DEFAULT_PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ secrets.POETRY_CACHE_VERSION }}
        restore-keys: ${{ runner.os }}-poetry-${{ env.DEFAULT_PYTHON_VERSION }}

    - name: Clear Poetry cache
      if: steps.cache-poetry.outputs.cache-hit == 'true' && contains(github.event.pull_request.labels.*.name, 'tools:clear-poetry-cache-unit-tests')
      run: rm -r .venv

    - name: Create virtual environment
      if: (steps.cache-poetry.outputs.cache-hit != 'true' || contains(github.event.pull_request.labels.*.name, 'tools:clear-poetry-cache-unit-tests'))
      run: python -m venv create .venv

    - name: Set up virtual environment
      run: poetry config virtualenvs.in-project true

    - name: Install Dependencies üì¶
      run: |
        make install-full

    - name: Lint Code üéé
      run: |
        poetry run flake8 .github --extend-ignore D
        poetry run black --check .github

    - name: Test Code üîç
      run: |
        make test-gh-actions
