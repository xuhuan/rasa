name: Publish Documentation

on:
  push:
    branches:
    - 'main'
    tags:
    - '**'

concurrency:
  # group workflow runs based on the branch or the tag ref
  group: documentation-${{ github.ref }}
  cancel-in-progress: true

# SECRETS
# - GH_DOCS_WRITE_KEY: generated locally, added to github repo (public key)
#                    `ssh-keygen -t rsa -b 4096 -C "Github CI Docs Key" -N "" -f key`
# - GITHUB_TOKEN: (default, from github actions)

env:
  DOCS_FOLDER: docs
  DOCS_BRANCH: documentation

jobs:
  docs:
    name: Build Docs
    runs-on: ubuntu-latest
    if: github.repository == 'RasaHQ/rasa'  # don't run this for main branches of forks, would fail anyways

    steps:
    - name: Checkout git repository 🕝
      uses: actions/checkout@v2

    - name: Set up Python 3.7 🐍
      uses: actions/setup-python@dc73133d4da04e56a135ae2246682783cc7c7cb6  # v2.2.2
      with:
        python-version: 3.7

    - name: Set up Node 12.x 🦙
      uses: actions/setup-node@v2.4.1
      with:
        node-version: '12.x'

    - name: Read Poetry Version 🔢
      run: |
        echo "POETRY_VERSION=$(scripts/poetry-version.sh)" >> $GITHUB_ENV
      shell: bash

    - name: Install poetry 🦄
      uses: Gr1N/setup-poetry@v7
      with:
        poetry-version: ${{ env.POETRY_VERSION }}

    - name: Load Poetry Cached Libraries ⬇
      uses: actions/cache@v1
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-3.7-non-full-${{ hashFiles('**/poetry.lock') }}-${{ secrets.POETRY_CACHE_VERSION }}
        restore-keys: ${{ runner.os }}-poetry-3.7-non-full

    - name: Load Yarn Cached Packages ⬇
      uses: actions/cache@v1
      with:
        path: docs/node_modules
        key: ${{ runner.os }}-yarn-12.x-${{ hashFiles('docs/yarn.lock') }}
        restore-keys: ${{ runner.os }}-yarn-12.x

    - name: Install Dependencies 📦
      run: make install install-docs

    - name: Pre-build Docs 🧶
      run: make prepare-docs

    - name: Build & Publish Docs 🏃‍♀️
      env:
        GH_DOCS_WRITE_KEY: ${{ secrets.GH_DOCS_WRITE_KEY }}
        TMP_DOCS_FOLDER: /tmp/documentation-${{ github.run_id }}
        TMP_SSH_KEY_PATH: /tmp/docs_key
      run: |
        eval "$(ssh-agent -s)"; touch $TMP_SSH_KEY_PATH; chmod 0600 $TMP_SSH_KEY_PATH
        echo "$GH_DOCS_WRITE_KEY" > $TMP_SSH_KEY_PATH
        ssh-add $TMP_SSH_KEY_PATH

        git config --global user.email "builds@github-ci.com"
        git config --global user.name "GitHub CI"
        git remote set-url --push origin "git@github.com:${{github.repository}}"

        ./scripts/push_docs_to_branch.sh

    - name: Notify slack on failure
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@212e9f7a9ca33368c8dd879d6053972128258985  # v1.5.0
      with:
        channel_id: ${{ secrets.SLACK_ALERTS_CHANNEL_ID }}
        status: FAILED
        color: warning
